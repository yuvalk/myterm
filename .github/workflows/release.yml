name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
    
    steps:
    - name: Create Release
      id: release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

  build-release:
    name: Build Release
    needs: create-release
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libwayland-dev \
          libxkbcommon-dev \
          libegl1-mesa-dev \
          libfontconfig1-dev \
          libfreetype6-dev \
          libharfbuzz-dev \
          pkg-config
          
    - name: Install cross-compilation toolchain
      if: matrix.target == 'aarch64-unknown-linux-gnu'
      run: |
        sudo apt-get install -y gcc-aarch64-linux-gnu
        
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
        
    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2
      with:
        key: release-${{ matrix.target }}
        
    - name: Build release
      run: |
        if [ "${{ matrix.target }}" = "aarch64-unknown-linux-gnu" ]; then
          export CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc
          export AR_aarch64_unknown_linux_gnu=aarch64-linux-gnu-ar
        fi
        cargo build --release --target ${{ matrix.target }}
        
    - name: Create archive
      run: |
        cd target/${{ matrix.target }}/release
        tar czf ../../../myterm-${{ matrix.target }}.tar.gz myterm
        cd ../../..
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./myterm-${{ matrix.target }}.tar.gz
        asset_name: myterm-${{ matrix.target }}.tar.gz
        asset_content_type: application/gzip

  publish-crates:
    name: Publish to crates.io
    needs: build-release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libwayland-dev \
          libxkbcommon-dev \
          libegl1-mesa-dev \
          libfontconfig1-dev \
          libfreetype6-dev \
          libharfbuzz-dev \
          pkg-config
          
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      
    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2
      
    - name: Publish to crates.io
      run: cargo publish --token ${{ secrets.CRATES_TOKEN }}